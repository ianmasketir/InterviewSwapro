@using Tes.Domain
@using PORECT.Helper
@model MsRoomViewModel
@{
    Layout = null;
}

<div class="row">
    <div class="col-sm-12 col-lg-12">
        <div class="new-user-info">
            <form id="DetailForm">
                <div class="card-body">
                    <div class="new-user-info">
                        <div class="row">
                            <div class="form-group col-md-6">
                                <label><span class="mandatory">Product Code</span>:</label>
                                @Html.HiddenFor(x => Model.Product.ID)
                                @Html.HiddenFor(x => Model.FormMode)
                                @if(Model.FormMode.ToLower() == "insert"){
                                    @Html.TextBoxFor(x => Model.Product.ProductCode, new { @class = "form-control", style = "text-transform:uppercase", maxlength = 10 })
                                }
                                else{
                                    @Html.TextBoxFor(x => Model.Product.ProductCode, new { @class = "form-control", style = "text-transform:uppercase", disabled = "disabled" })
                                }
                            </div>
                            <div class="form-group col-md-6">
                                <label><span class="mandatory">Name</span>:</label>
                                @if(Model.FormMode.ToLower() != "view"){
                                    @Html.TextBoxFor(x => Model.Product.Name, new { @class = "form-control", required = "required", maxlength = 100 })
                                }
                                else{
                                    @Html.TextBoxFor(x => Model.Product.Name, new { @class = "form-control", disabled = "disabled" })
                                }
                            </div>
                            <div class="form-group col-md-6">
                                <label><span class="mandatory">Price</span>:</label>
                                @if(Model.FormMode.ToLower() == "insert"){
                                    @Html.TextBox("Price", null, new { @class = "form-control", required = "required" })
                                }
                                else if(Model.FormMode.ToLower() == "update"){
                                    @Html.TextBox("Price", string.Concat("Rp. ", Model.Product.Price.ToString("N0").Replace(",", ".")), new { @class = "form-control", required = "required" })
                                }
                                else{
                                    @Html.TextBox("Price", string.Concat("Rp. ", Model.Product.Price.ToString("N0").Replace(",", ".")), new { @class = "form-control", disabled = "disabled" })
                                }
                            </div>
                            <div class="form-group col-md-12">
                                <label for="lname">Desc :</label>
                                @if(Model.FormMode.ToLower() != "view"){
                                    @Html.TextAreaFor(x => Model.Product.Description, new { @class = "form-control", required = "required", maxlength = 200 })
                                }
                                else{
                                    @Html.TextAreaFor(x => Model.Product.Description, new { @class = "form-control", disabled = "disabled" })
                                }
                            </div>
                        </div>
                        @if (Model.FormMode != "View")
                        {
                            <button type="submit" class="btn btn-primary btn-submit">Submit</button>
                        }
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>

<script>
    $("#DetailForm").submit(function (e) {
        e.preventDefault();
        // debugger;
        var ID = $("#Product_ID").val();
        var ProductCode = $("#Product_ProductCode").val();
        var Name = $("#Product_Name").val();
        var Price = $("#Price").val().replace(/[\.,](?=\d{3})/g, '').replace('Rp. ', '');
        if(Price.includes(",")){
            Price = Price.replace(",", ".");
        }
        var Description = $("#Product_Description").val();

        var transType = $("#FormMode").val();

        var entity = {
            ID: ID,
            TransactionType: transType,
            ProductCode: ProductCode,
            Name: Name,
            Description: Description,
            Price: Price
        };
        // debugger;
        ConfirmationMessage("Confirmation",
            "Are you sure you want to submit data?",
            "question", "Yes", "Success",
            "Data submitted successfully.", "DataTransaction",
            {entity: entity, param1: '@Url.Action("Submit", "Product")',
              param2: 'Submit', param3: null}
        );
    });
    $('#Price').on('keyup click change paste input', function (event) {
        var dengan_rupiah = document.getElementById('Price');
        dengan_rupiah.addEventListener('keyup', function (e) {
            dengan_rupiah.value = formatRupiah(this.value, 'Rp. ');
        });
    });

    function formatRupiah(angka, prefix) {
        var number_string = angka.replace(/[^,\d]/g, '').toString(),
            split = number_string.split(','),
            sisa = split[0].length % 3,
            rupiah = split[0].substr(0, sisa),
            ribuan = split[0].substr(sisa).match(/\d{3}/gi);

        if (ribuan) {
            separator = sisa ? '.' : '';
            rupiah += separator + ribuan.join('.');
        }

        rupiah = split[1] != undefined ? rupiah + ',' + split[1] : rupiah;
        return prefix == undefined ? rupiah : (rupiah ? 'Rp. ' + rupiah : '');
    }

</script>
@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
